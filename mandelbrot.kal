
def unary! (v)
    if v
       then 0
       else 1;


def unary- (v)
    0 - v;


def binary > 10(lhs rhs)
    rhs < lhs;


def binary | 5(lhs rhs)
    if lhs then
        1
    else if rhs then
        1
    else
        0;


def binary& 6(lhs rhs)
    if !lhs
       then 0
       else ! !rhs;

def binary== 9(lhs rhs)
    !(lhs < rhs | lhs > rhs);


def binary : 1(x y) y;


extern putchard(char);


def printdensity(d)
    if d > 8 then
       # Space
       putchard(32)
    else if d > 4 then
       # Light shade
       putchard(226):
       putchard(150):
       putchard(145)
    else if d > 2 then
       # Medium shade
       putchard(226):
       putchard(150):
       putchard(146)
    else
       # Dark shade
       putchard(226):
       putchard(150):
       putchard(147);


def printdensity_sq(d)
    printdensity(d):
    printdensity(d);


def mandelconverger(real imag iters creal cimag)
    if iters > 255 | (real * real + imag * imag > 4) then
       iters
    else
        mandelconverger(real * real - imag * imag + creal,
                        2 * real * imag + cimag,
                        iters + 1, creal, cimag);


def mandelconverge(real imag)
    mandelconverger(real, imag, 0, real, imag);


def mandelhelp(xmin xmax xstep ymin ymax ystep)
    for y = ymin, y < ymax, ystep in
        (for x = xmin, x < xmax, xstep in
            printdensity_sq(mandelconverge(x, y))):
        putchard(10);


def mandel(realstart imagstart realmag imagmag)
    mandelhelp(realstart, realstart + realmag * 78, realmag,
               imagstart, imagstart + imagmag * 40, imagmag);


def mainf()
    mandel(-2.3, -1.3, 0.05, 0.07);
